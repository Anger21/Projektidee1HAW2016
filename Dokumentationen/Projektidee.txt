=== Projektidee Anger21, 2016-04-05 ==

Es besteht zurzeit keine Projektidee. Es wird aktualisiert, sobald eine Projektidee vorhanden ist.

=== Feedback Alpers, 2016-04-12 ===

Kein Problem. Dann formulieren Sie bitte für das folgende Brettspiel eine Projektbeschreibung wie in Kap. 5 beschrieben und arbeiten Sie damit weiter: Auf den Spuren von Marco Polo http://www.brettspiele-report.de/auf-den-spuren-von-marco-polo/

=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.

Viele Grüße,
Markus Alpers


=== Response Anger21, 2016-04-18 | Update 2016-04-24 ===

Ich habe Ihr Feedback gelesen, jedoch möchte ich das vorgeschalgene Spiel nicht umsetzen. Dafür habe ich selber nun eine Projektidee entwickelt.
Man kann die Idee als Kartenspiel, als 2D- oder 3D- oder Smartphone-Game umsetzen.

=== Eigene Projektidee ===

Name der Idee: Relikte der Zeit

In meiner Idee geht es darum, dass man zunächst einen Charakter erstellt. 
Auf das Visuelle kommt es nicht an, man bestimmt lediglich zum Anfang hin, welches Haupt- und Sub-Element, die zum Kämpfen genutzt werden, und natürlich welchen Namen man im Spiel haben möchte
- Hauptelemente sind: Feuer, Wasser, Natur
- Subelemente sind Licht und Dunkelheit. 
-- Feuer > Natur, Wasser > Feuer, Natur > Wasser und Licht > Dunkelheit, Dunkelheit > Licht.
Außerdem kann der Charakter Erfahrung sammeln und sie auf seine Skillpunkte legen. 1 Skillpunkt pro Levelaufstieg und bei jedem dritten Level 2 Skillpunkte.
- Skillpunkte: Stärke = physischer Schaden, Verteidigung, Schnelligkeit, Intelligenz = magischer Schaden. 
Zusätzlich kann er auch Ausrüstung tragen. Dafür sind 3 Slots eingerichtet.

Grundsätzlich geht es darum eine vorgegebene Welt zu erkunden und dabei:
- Secrets zu finden (z.B. Meilensteine der fiktiven Geschichte)
- Endbosse/Götter zu besiegen und weitere Areale freizuschalten

Man kann im Spiel Quests erfüllen, die einem mithilfe der Belohnungen helfen im Spiel schneller bzw. besser voranzuschreiten.
- Darunter einmalige und wiederholbare Quests. Einmalige sind wertvoller als wiederholbare.
Neben den Quests gibt es Minibosse und Meister. 
- Minibosse geben einem wertvolle Ausrüstung, Meister hingegen verbessern das Haupt- und/oder Subelement.
Zu guter Letzt existieren die Endbosse und Götter.
- Endbosse geben einem zusätzliche Skillpunkte, Götter verleihen dem Spieler zusätzliche Kräfte (z.B. spezielle Attacke oder Flügel zum überwinden von Hindernissen)

Interaktionen:

Startscreen, durch das die Spielewelt betreten werden kann:
- Abfrage nach erstellten Charakter
-- Wenn erstellt und erstellten Charakter ausgewählt 
---> Eintritt in Spielewelt
-- Wenn nicht erstellt
---> Erstellung eines Charakters
---> Option zur Rückkehr zum Startscreen

In der Spielewelt:

Menü, welches über ein Feld geöffnet werden kann, zu einem Menü-Overview führt und verschiedene Inhalte hat:
- Charakter
-- Status des Charakters
--- Option zur Schließung dieses Inhalts, Rückkehr zum Menü-Overview
- Inventar
-- derzeit im Inventar vorhandene Items
--- Option zur Schließung dieses Inhalts, Rückkehr zum Menü-Overview
- Einstellungen
-- Anpassung der visuellen, audio- und steuertechnischen Elemente
--- Option zur Schließung dieses Inhalts, Rückkehr zum Menü-Overview
usw.

Protokoll, dass derzeitige Reise aufzeichnet und über ein Feld maximiert und minimiert werden kann
- hilft Spieler bei langen Pausen wieder ins Spiel zu finden

Bewegung in offener Welt, in alle Himmelsrichtungen und Funktionen fürs Ducken bzw. Springen
- Bewegung: kurzzeitig, rasche Bewegungen möglich
- Springen: sehr hohes Springen ist möglich, kostet aber etwas Zeit
- Bei Storytechnischen Events:
-- Auswahlfeld1 bei dem das entsprechende Objekt untersucht werden kann
-- Auswahlfeld2 bei dem das Objekt aufgenommen werden kann und im Inventar verfrachtet wird
-- Auswahlfeld3 aktiviert Interaktion zwischen Charakter/Spieler und NPC
-- Auswahlfelder verschwinden, sobald man sich von dem Ziel entfernt

Kampf über eine Angriffsfläche und Verteidigungsfläche, außerdem werden Ducken und Springen erweitert:
- im Kampf:
-- Angriff: Angriff kann stärker werden, wenn Fläche gewisse Zeit lang gehalten wird
-- Verteidung: kann kurzzeitig abgelegt werden, Angriffsintervalle verkürzen sich
-- Ducken: bei Bewegung kann nun gerollt werden
-- Springen: bei Bewegung kann Vorwärtssprung machen
- nach Kampf:
-- Aufnahmefeld von Drops/Belohnungen
-- Ducken und Springen verlieren die Erweiterung wieder

===================================
=== Feedback Alpers, 2016-05-03 ===
===================================

Ja, das wäre eine mögliche Projektidee.

Sie haben sich viele Gedanken gemacht und diese in einer Art formuliert, wie es für die Entwicklung eines Computerspiels nötig ist. Damit haben Sie ein wichtiges Ziel des Projekts erreicht. Leider ist es momentan für einen Außenstehenden relativ unübersichtlich. Das beginnt damit, dass Sie die eigentliche Spielidee erst mitten in der Aufstellung erklären, was schade ist, weil dieser eine Satz sehr prägnant das bisher konzipierte Spiel zusammenfasst:

-> Grundsätzlich geht es darum eine vorgegebene Welt zu erkunden und dabei [sowohl] Secrets zu finden [als auch] Endbosse/Götter zu besiegen und weitere Areale freizuschalten. <-

Hier schreibe ich "möglich", weil es zwei Dinge gibt, die Sie noch ausarbeiten müssen, damit es eine Anwendung wird, die sowohl die Anforderungen im Bereich webbasiert als auch interaktiv erfüllt. Die folgenden Anmerkungen ergeben sich daraus, dass Sie bislang die webbasierten als auch die interaktiven Elemente noch nicht beschrieben haben:

- Interaktionsmöglichkeiten: Bislang wirkt es so, als wenn die Reaktion des Programms wie im klassischen EVA-Prinzip verläuft. (Wenn Sie sich hier wundern, weil das bei den meisten Computerspielen so ist: Genau da liegt der Hase im Pfeffer, bzw. genau deshalb gibt es kaum noch single-Player Spiele, die Spieler langfristig fesseln.)
- Webbasiert: Momentan wirkt es so, als wenn das Spiel von einem Spieler alleine gespielt werden kann. Webbasiert bedeutet bei Spielen u.a., dass mehrere Spieler "gleichzeitig" in einer gemeinsamen Spielwelt unterwegs sein können, während Sie sich an beliebigen Orten auf der Welt befinden.

Erweitern Sie Ihre Beschreibung bitte so, dass die geforderte Interaktion und Webbasierung erkennbar ist.

Wenn Sie das erledigt haben, zerlegen Sie die Beschreibung bitte in drei Teile, bzw. arbeiten Sie die Punkte nochmal nach:
1.) Die eigentliche Beschreibung des Spiels. (Zusammenfassung in zwei oder drei Sätzen sowie eine etwas ausführlichere Version.) Speichern Sie diese am Anfang dieser Datei, damit es das erste ist, was jemand sieht, der die Datei öffnet.
2.) Die strukturellen Elemente: Alles, was Sie unter diesem Oberbegriff sammeln sollte anschließend als Teil der strukturellen Elemente in strukt.html integrierte werden. Ist es dort schon enthalten, dann brauchen Sie es hier nicht nochmal anzugeben.
3.) Die Regeln und Abläufe verlagern Sie bitte ebenfalls in die Datei strukt.html, aber fügen Sie sie unter der Überschrift === Regeln und Abläufe === ans Ende der Aufstellung der strukturellen Elemente an. Denn damit arbeiten Sie später, wenn Sie PHP programmieren.

Wertung 2: Projektbeschreibung: gesamt: 3 / 10
- Pro Interaktionsmöglichkeit: 0 
- Knappe aber klare Beschreibung: 3
- Werbeslogans u.ä.: 0 
- Designaspekte: 0 
- Voraussetzung bekannten Wissens: 0 

=====================
=== Feedback Ende ===
=====================